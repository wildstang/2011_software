//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : WsLimitSwitch.cpp
//  @ Date : 12/14/2010
//  @ Author : 
//
//


#include "WsLimitSwitch.h"

/**
 * Construst an instance of a WsLimitSwitch
 *
 * @param channel The digital channel that the limit switch is connected to
 * @param invert Whether to invert the value read when returning a value
 */
WsLimitSwitch::WsLimitSwitch(UINT32 channel, bool invert)
{
    a_digitalInput = new DigitalInput(channel);
    a_invert = invert;
}

/**
 * Construst an instance of a WsLimitSwitch
 *
 * @param slot The physical slot that the limit switch is connected to
 * @param channel The digital channel that the limit switch is connected to
 * @param invert Whether to invert the value read when returning a value
 */
WsLimitSwitch::WsLimitSwitch(UINT32 slot, UINT32 channel, bool invert)
{
    a_digitalInput = new DigitalInput(slot, channel);
    a_invert = invert;
}


/**
 * Destruct an instance of a WsLimitSwitch
 *
 */
WsLimitSwitch::~WsLimitSwitch()
{
    delete a_digitalInput;
    a_digitalInput = NULL;

}


/**
 * Get the current value of the limit switch
 * The digital input returns a 0 when pressed
 * The invert flag set at construction time determines if the value
 * needs to be inverted
 * 
 * @return Whether the switch is pressed or not.
 */
bool WsLimitSwitch::Get(void )
{
    bool ret = false;
    UINT32 val = a_digitalInput->Get();

    // 0 is pressed
    if(val == 0)
    {
        ret = true;
    }

    if(a_invert == true)
    {
        ret = !ret;
    }

    return ret;

}

