//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang 2010
//  @ File Name : WsControllerAxis.cpp
//  @ Date : 1/14/2009
//  @ Author : 
//
//


#include "WsControllerAxis.h"
#include "Joystick.h"
#include "Gamepad.h"

/**
* Constructs a WsControllerAxis
* @param p_js The joystick that has the axis that we want to read
* @param axis The axis number to read
*/
WsControllerAxis::WsControllerAxis(Joystick* p_js, UINT32 axis, bool invert)
{
    /* Store the joystick and axis for later use */
    ap_joystick = p_js;
    ap_gamepad = NULL;
    ap_ds = NULL;
    a_axisNum = axis;
    a_channelNum = 0;
    a_invert = invert;
}

/**
* Constructs a WsControllerAxis
* @param p_pad The gamepad that has the axis that we want to read
* @param axis The axis number to read
*/
WsControllerAxis::WsControllerAxis(Gamepad* p_pad, UINT32 axis, bool invert)
{
    /* Store the gamepad and axis for later use */
    ap_joystick = NULL;
    ap_gamepad = p_pad;
    ap_ds = NULL;
    a_axisNum = axis;
    a_channelNum = 0;
    a_invert = invert;
}

/**
* Destructs a WsControllerAxis
*/
WsControllerAxis::~WsControllerAxis()
{
}

/**
* Gets the value of the axis.  Inversion is applied if necessary
* @returns The float representation of the analog value of the axis
*/
float WsControllerAxis::GetValue(void )
{
    float value = 0;

    if(ap_joystick != NULL)
    {
        value = ap_joystick->GetRawAxis(a_axisNum);
    }
    else if(ap_gamepad != NULL)
    {
        value = ap_gamepad->GetRawAxis(a_axisNum);
    }

    value = ApplyInvert(value);

    return value;
}

/**
* Applies inversion to a float value by multiplying by -1 if the flag is set
* @param value The current value
* @returns The adjusted value if the a_invert flag is set, otherwis the current value is returned
*/
float WsControllerAxis::ApplyInvert(float value)
{
    if(a_invert == true)
    {
        return value * -1;
    }
    else
    {
        return value;
    }
}
