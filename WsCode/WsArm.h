//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : WsArm.h
//  @ Date : 1/22/2011
//  @ Author : 
//
//


#if !defined(_WSARM_H)
#define _WSARM_H

#include "WPILib.h"
#include "WsCalibration.h"
class WsPid;

#define ARM_IN_POSITION_COUNT 5

class WsArm {
public:
	static const float SCORE_TUBE_SPEED = -0.15;

    WsArm(UINT32 arm1_sc, UINT32 arm2_sc, UINT32 pot);
    ~WsArm();
    void setSpeed(float speed, bool automated, bool overrideLimits);
    void setAngle(float angle);
    INT32 getPotValue(void );
    float getAngleFromPot(INT32 potValue);
    bool isInPosition(void);
    void reset(void);
    void resetErrorSum(void);


    INT32 dashGetArmSetpoint();
    bool dashGetArmInPosition();
    float dashGetArmAngle();
    INT32 dashGetArmPot();

    INT32 a_cachedSetpoint;
    bool a_cachedArmInPosition;
    float a_cachedArmAngle;

    UINT8 a_cachedArmInPositionCount;



protected:
    SpeedController* ap_arm1;
    SpeedController* ap_arm2;
    AnalogChannel* ap_pot;
    INT32 a_limitTop;
    INT32 a_limitBottom;
    WsPid* ap_pid;
    WsCalibration* ap_calib;
};

#endif  //_WSARM_H
