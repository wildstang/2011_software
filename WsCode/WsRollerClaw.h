//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : WsRollerClaw.h
//  @ Date : 1/22/2011
//  @ Author : 
//
//


#if !defined(_WSROLLERCLAW_H)
#define _WSROLLERCLAW_H

#include "WPILib.h"

#define CLAW_RELEASE_OUTPUT_CLOSED false
#define CLAW_RELEASE_OUTPUT_OPEN   true
#define CLAW_RELEASE_DEFAULT_OUTPUT_STATE  (CLAW_RELEASE_OUTPUT_CLOSED)
#define CLAW_RELEASE_DEFAULT_CMD (CLAW_CLOSE)

#define TUBE_POSSESSED     0
#define TUBE_NOT_POSSESSED 1

class DigitalChannel;

class WsRollerClaw {
public:
    static const float ROLLER_CLAW_SPEED_OFF = 0.0;
    static const float ROLLER_CLAW_SPEED_IN  = 1.0;
    static const float ROLLER_CLAW_SPEED_OUT = -1.0;
    static const float ROLLER_CLAW_SPEED_OUT_SLOW = -.20;

    typedef enum {
        CLAW_HOLD = 0,
        CLAW_CLOSE,
        CLAW_OPEN,
    } ReleaseStateT;

    typedef enum
    {
        ROLLER_OFF,
        ROLLER_IN,
        ROLLER_OUT,
        ROLLER_OUT_SLOW
    } RollerSpeedT;

    WsRollerClaw(UINT32 sc, UINT32 tube_release_sol, UINT32 tube_possessed_sw);
    ~WsRollerClaw();
    void setReleaseState(ReleaseStateT state);
    void setRollerSpeed(float speed);
    void setSnapClawEnabled(bool enabled);
    bool getTubePossessed(void );
    void reset(void );
protected:
    SpeedController* ap_sc;
    Solenoid* ap_tube_release;
    DigitalInput* ap_tube_possessed;
    bool a_snapClawEnabled;
    bool a_clawState;
};

#endif  //_WSROLLERCLAW_H
