//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : WsLift.h
//  @ Date : 1/22/2011
//  @ Author : 
//
//


#if !defined(_WSLIFT_H)
#define _WSLIFT_H

#define LIFT_SLOW_THRESH 200
#define UNINIT_SETPOINT -999
#define LIFT_IN_POSITION_COUNT 5

#include "WPILib.h"
class DigitalInput;
class WsPid;
class WsEncoderPot;
class WsCalibration;

class WsLift {
public:
    WsLift(UINT32 sc_1, UINT32 sc_2, UINT32 encoder_a, UINT32 encoder_b, UINT32 bottom_sw, UINT32 top_sw);
    ~WsLift();
    void setSpeed(float speed, bool automated, bool overrideLimits);
    void setHeight(INT32 height);
    INT32 getEncoderValue(void );
    bool isEncoderInitialized(void );
    bool isInPosition(void);
    void reset(void);
    void resetErrorSum(void);

    bool dashGetLiftInPosition(void);
    INT32 dashGetLiftSetpoint(void);
    bool dashGetLiftSwBot(void);
    bool dashGetLiftSwTop(void);

    float a_limitLiftSpeed;
    
protected:
    SpeedController* ap_sc1;
    SpeedController* ap_sc2;
    WsEncoderPot* ap_encPot;
    WsPid* ap_currentPID;
    WsPid* ap_otherPID;
    WsPid* ap_upPID;
    WsPid* ap_downPID;
    INT32 a_cachedSetpoint;
    bool a_cachedLiftInPosition;
    UINT8 a_cachedLiftInPositionCount;
    INT32 a_cachedEncoderValue;

    INT32 a_currentSetpoint;

    bool a_latchTopOverrun;
    WsCalibration* ap_calib;
};

#endif  //_WSLIFT_H
